/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SidebarRouteImport } from './routes/_sidebar'
import { Route as SidebarIndexRouteImport } from './routes/_sidebar/index'
import { Route as SidebarChatThreadIdRouteImport } from './routes/_sidebar/chat.$threadId'

const SidebarRoute = SidebarRouteImport.update({
  id: '/_sidebar',
  getParentRoute: () => rootRouteImport,
} as any)
const SidebarIndexRoute = SidebarIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SidebarRoute,
} as any)
const SidebarChatThreadIdRoute = SidebarChatThreadIdRouteImport.update({
  id: '/chat/$threadId',
  path: '/chat/$threadId',
  getParentRoute: () => SidebarRoute,
} as any)

export interface FileRoutesByFullPath {
  '': typeof SidebarRouteWithChildren
  '/': typeof SidebarIndexRoute
  '/chat/$threadId': typeof SidebarChatThreadIdRoute
}
export interface FileRoutesByTo {
  '/': typeof SidebarIndexRoute
  '/chat/$threadId': typeof SidebarChatThreadIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_sidebar': typeof SidebarRouteWithChildren
  '/_sidebar/': typeof SidebarIndexRoute
  '/_sidebar/chat/$threadId': typeof SidebarChatThreadIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/todos' | '/' | '/chat/$threadId'
  fileRoutesByTo: FileRoutesByTo
  to: '/todos' | '/' | '/chat/$threadId'
  id:
    | '__root__'
    | '/_sidebar'
    | '/todos'
    | '/_sidebar/'
    | '/_sidebar/chat/$threadId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  SidebarRoute: typeof SidebarRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_sidebar': {
      id: '/_sidebar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SidebarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_sidebar/': {
      id: '/_sidebar/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof SidebarIndexRouteImport
      parentRoute: typeof SidebarRoute
    }
    '/_sidebar/chat/$threadId': {
      id: '/_sidebar/chat/$threadId'
      path: '/chat/$threadId'
      fullPath: '/chat/$threadId'
      preLoaderRoute: typeof SidebarChatThreadIdRouteImport
      parentRoute: typeof SidebarRoute
    }
  }
}

interface SidebarRouteChildren {
  SidebarIndexRoute: typeof SidebarIndexRoute
  SidebarChatThreadIdRoute: typeof SidebarChatThreadIdRoute
}

const SidebarRouteChildren: SidebarRouteChildren = {
  SidebarIndexRoute: SidebarIndexRoute,
  SidebarChatThreadIdRoute: SidebarChatThreadIdRoute,
}

const SidebarRouteWithChildren =
  SidebarRoute._addFileChildren(SidebarRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  SidebarRoute: SidebarRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
